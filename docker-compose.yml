version: '3.8'

services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: chat_academico
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - chat_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build: ./backend
    restart: always
    environment:
      NODE_ENV: development
      DB_HOST: db
      DB_USER: postgres
      DB_PASS: postgres
      DB_NAME: chat_academico
      DB_PORT: 5432
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES: ${JWT_EXPIRES}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      MAILJET_API_KEY: ${MAILJET_API_KEY}
      MAILJET_SECRET_KEY: ${MAILJET_SECRET_KEY}
      HOTMART_WEBHOOK_SECRET: ${HOTMART_WEBHOOK_SECRET}
      FRONTEND_URL: ${FRONTEND_URL}
      BACKEND_PUBLIC_URL: ${BACKEND_PUBLIC_URL}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "5000:5000"
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/logs:/app/logs
    networks:
      - chat_network

  frontend:
    build: ./frontend
    restart: always
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - chat_network
    environment:
      - REACT_APP_API_URL=http://backend:5000/api

volumes:
  db_data:

networks:
  chat_network:
    driver: bridge
